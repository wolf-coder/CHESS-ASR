#s(persp--state-complete ("/home/cuore-pc/Programming/Project/Chess-ASR/Vosk/grammar.py" "/home/cuore-pc/Programming/Project/Chess-ASR/Vosk/Mic_code.py" "/home/cuore-pc/Programming/Project/Chess-ASR/Vosk/Mic_code.bkp.py" "/home/cuore-pc/Programming/Project/Chess-ASR/selenium/Selenium_Functions.py" "/home/cuore-pc/Programming/Project/Chess-ASR/selenium/main.py" "~/Programming/Project/Chess-ASR/selenium/" "/home/cuore-pc/Programming/Project/Chess-ASR/ChessLayer/fen.py" "/home/cuore-pc/Roam-Notes/20230203145512-portfolio_chess.org" "/home/cuore-pc/Roam-Notes/20221226180040-ml_portfolio_project.org" "/home/cuore-pc/Programming/My_vosk/Python-examples/test_words.py" "/home/cuore-pc/Roam-Notes/20221216182845-cv.org" "/home/cuore-pc/Roam-Notes/20230129132323-python_examples.org" "/home/cuore-pc/Roam-Notes/20230129132340-test_alternatives.org" "/home/cuore-pc/Roam-Notes/20230202143458-test_words.org" "/home/cuore-pc/Roam-Notes/20230202191246-test_text.org") (#s(persp--state-frame-v2 #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("main" #s(persp--state-single ("20221226180040-ml_portfolio_project.org" "20221216182845-cv.org" "test_words.py") (((min-height . 4) (min-width . 10) (min-height-ignore . 2) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 68) (min-pixel-width . 80) (min-pixel-height-ignore . 34) (min-pixel-width-ignore . 32) (min-pixel-height-safe . 17) (min-pixel-width-safe . 16)) leaf (pixel-width . 652) (pixel-height . 595) (total-width . 81) (total-height . 35) (normal-height . 1.0) (normal-width . 1.0) (buffer "20221226180040-ml_portfolio_project.org" (selected . t) (hscroll . 0) (fringes 6 6 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 1345) (start . 644)))))) ("main") nil) #s(persp--state-frame-v2 #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("main" #s(persp--state-single ("test_words.py" "20230202143458-test_words.org" "20230129132340-test_alternatives.org" "20230202191246-test_text.org" "20230129132323-python_examples.org") (((min-height . 4) (min-width . 20) (min-height-ignore . 2) (min-width-ignore . 8) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 68) (min-pixel-width . 160) (min-pixel-height-ignore . 34) (min-pixel-width-ignore . 64) (min-pixel-height-safe . 17) (min-pixel-width-safe . 32)) hc (pixel-width . 668) (pixel-height . 595) (total-width . 84) (total-height . 35) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 334) (pixel-height . 595) (total-width . 42) (total-height . 35) (normal-height . 1.0) (normal-width . 0.5) (buffer "20230129132323-python_examples.org" (selected) (hscroll . 0) (fringes 6 6 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 16899) (start . 1)) (prev-buffers ("test_words.py" 1 90) ("20230129132323-python_examples.org" 1 227) ("*Python*" 1 5))) (leaf (last . t) (pixel-width . 334) (pixel-height . 595) (total-width . 42) (total-height . 35) (normal-height . 1.0) (normal-width . 0.5) (buffer "test_words.py" (selected . t) (hscroll . 0) (fringes 6 6 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 276) (start . 1)) (prev-buffers ("*Python*" 1 5) ("20230129132323-python_examples.org" 8318 9392) ("20230129132340-test_alternatives.org" 1 172) ("20230202143458-test_words.org" 1 172) ("20230202191246-test_text.org" 1 157))))))) ("main") nil) #s(persp--state-frame-v2 #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("FEN_Chess" #s(persp--state-single ("fen.py" "20230203145512-portfolio_chess.org") (((min-height . 4) (min-width . 20) (min-height-ignore . 2) (min-width-ignore . 8) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 68) (min-pixel-width . 160) (min-pixel-height-ignore . 34) (min-pixel-width-ignore . 64) (min-pixel-height-safe . 17) (min-pixel-width-safe . 32)) hc (pixel-width . 1366) (pixel-height . 693) (total-width . 171) (total-height . 41) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 686) (pixel-height . 693) (total-width . 86) (total-height . 41) (normal-height . 1.0) (normal-width . 0.5) (buffer "*scratch* (FEN_Chess)" (selected) (hscroll . 0) (fringes 6 6 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 5) (start . 1)) (prev-buffers ("20230203145512-portfolio_chess.org" 1 706) ("*GNU Emacs*" 1 77) ("*scratch* (FEN_Chess)" 1 146))) (leaf (last . t) (pixel-width . 680) (pixel-height . 693) (total-width . 85) (total-height . 41) (normal-height . 1.0) (normal-width . 0.5) (buffer "fen.py" (selected . t) (hscroll . 0) (fringes 6 6 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 352) (start . 1)) (prev-buffers ("fen.py" 1 727) ("*Python*" 1 5) ("*eshell*" 1 656) ("20230203145512-portfolio_chess.org" 1 566))))) "Selenium" #s(persp--state-single ("Selenium_Functions.py" "main.py" "selenium") (((min-height . 4) (min-width . 20) (min-height-ignore . 2) (min-width-ignore . 8) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 68) (min-pixel-width . 160) (min-pixel-height-ignore . 34) (min-pixel-width-ignore . 64) (min-pixel-height-safe . 17) (min-pixel-width-safe . 32)) hc (pixel-width . 1366) (pixel-height . 693) (total-width . 171) (total-height . 41) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 686) (pixel-height . 693) (total-width . 86) (total-height . 41) (normal-height . 1.0) (normal-width . 0.5) (buffer "*scratch* (Selenium)" (selected . t) (hscroll . 0) (fringes 6 6 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 656) (start . 1)) (prev-buffers ("*Python*" 1 5) ("*scratch* (Selenium)" 1 146))) (leaf (last . t) (pixel-width . 680) (pixel-height . 693) (total-width . 85) (total-height . 41) (normal-height . 1.0) (normal-width . 0.5) (buffer "Selenium_Functions.py" (selected) (hscroll . 0) (fringes 6 6 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 870) (start . 1)) (prev-buffers ("Selenium_Functions.py" 1 870) ("main.py" 1 304))))) "Vosk" #s(persp--state-single ("Mic_code.py" "grammar.py" "Mic_code.bkp.py") (((min-height . 8) (min-width . 20) (min-height-ignore . 4) (min-width-ignore . 8) (min-height-safe . 2) (min-width-safe . 4) (min-pixel-height . 136) (min-pixel-width . 160) (min-pixel-height-ignore . 68) (min-pixel-width-ignore . 64) (min-pixel-height-safe . 34) (min-pixel-width-safe . 32)) hc (pixel-width . 1366) (pixel-height . 693) (total-width . 171) (total-height . 41) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (vc (pixel-width . 686) (pixel-height . 693) (total-width . 86) (total-height . 41) (normal-height . 1.0) (normal-width . 0.5) (combination-limit) (leaf (pixel-width . 686) (pixel-height . 471) (total-width . 86) (total-height . 28) (normal-height . 0.6763848396501457) (normal-width . 1.0) (buffer "grammar.py" (selected . t) (hscroll . 0) (fringes 6 6 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 32) (start . 1)) (prev-buffers ("Mic_code.bkp.py" 2148 2405) ("*Python*" 1 5) ("*eshell*" 1 656) ("*scratch* (Vosk)" 1 146))) (leaf (last . t) (pixel-width . 686) (pixel-height . 222) (total-width . 86) (total-height . 13) (normal-height . 0.3236151603498542) (normal-width . 1.0) (buffer "*scratch* (Vosk)" (selected) (hscroll . 0) (fringes 6 6 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 5) (start . 1)))) (leaf (last . t) (pixel-width . 680) (pixel-height . 693) (total-width . 85) (total-height . 41) (normal-height . 1.0) (normal-width . 0.5) (buffer "Mic_code.py" (selected) (hscroll . 0) (fringes 6 6 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 1409) (start . 820)) (prev-buffers ("Mic_code.bkp.py" 996 2214))))))) ("FEN_Chess" "Selenium" "Vosk") nil)))